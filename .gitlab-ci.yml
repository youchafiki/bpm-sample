# Build and deploy an application to IKS
##

stages:
  - test
  - build
  - package
  - deploy

sonarqube-check:
  image: maven:3.6.3-jdk-11
  stage: test
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=apistream_digital_ring_lab_AX6_xgEhu28_SSfF6Ra3
  allow_failure: true
  only:
    - master # or the name of your main branch

maven-build:
  image: maven:3-jdk-8
  stage: build
  script: "mvn package -B"
  artifacts:
    paths:
      - target/*.jar


variables:
  PUBLIC_IP: "XXX.XXX.XXX.XXX"
  NODEPORT: "XXXXX"

  KANIKO_VERSION: "debug"
  HELM_VERSION: "3.7.2"



Build App:
  stage: package

  image:
    name: gcr.io/kaniko-project/executor:$KANIKO_VERSION
    entrypoint: [""]
  script:
    - mkdir -p /root/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF



Deploy App:
  stage: deploy

  image: dtzar/helm-kubectl:$HELM_VERSION
  script:
    - echo " =================================================================="
    - echo "$HELM_VERSION"
    - echo "image.repository=$CI_REGISTRY_IMAGE"
    - echo "image.tag=$CI_BUILD_REF"
    - echo "imageCredentials.username=$CI_DEPLOY_USER"
    - echo "imageCredentials.password=$CI_DEPLOY_PASSWORD"
    - echo "imageCredentials.registry=$CI_REGISTRY"
    - echo "image.pullPolicy=Always"
    - echo "service.nodePort=$NODEPORT"
    - echo " =================================================================="
    - echo " ££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££"
    - echo "image.repository=$CI_REGISTRY_IMAGE,"
    - echo "image.tag=$CI_BUILD_REF,"
    - echo "imageCredentials.username=$CI_DEPLOY_USER,"
    - echo "imageCredentials.password=$CI_DEPLOY_PASSWORD,"
    - echo "imageCredentials.registry=$CI_REGISTRY,"
    - echo "image.pullPolicy=Always,service.nodePort=$NODEPORT"
    - echo " ££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££"
    # - kubectl get secrets/tiller-token-r9fqw -n gitlab-managed-apps -o "jsonpath={.data['ca\.crt']}" | base64 -d > tiller-ca.crt
    # - kubectl get secrets/tiller-token-r9fqw -n gitlab-managed-apps -o "jsonpath={.data['tls\.crt']}" | base64 -d > tiller.crt
    # - kubectl get secrets/tiller-token-r9fqw -n gitlab-managed-apps -o "jsonpath={.data['tls\.key']}" | base64 -d > tiller.key
    - helm repo add stable https://charts.helm.sh/stable
    - helm upgrade
      --debug
      --install pbm-sample
      --namespace=gitlab-managed-apps
      --set image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_BUILD_REF,imageCredentials.username=$CI_DEPLOY_USER,imageCredentials.password=$CI_DEPLOY_PASSWORD,imageCredentials.registry=$CI_REGISTRY,image.pullPolicy=Always,service.nodePort=$NODEPORT
      ./charts/pbm-sample/

  only:
    - master
